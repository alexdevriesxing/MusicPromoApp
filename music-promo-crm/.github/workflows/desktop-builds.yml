name: Desktop Builds

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to create (e.g. v1.0.0)'
        required: false
        default: ''
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: desktop-builds-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    defaults:
      run:
        working-directory: MusicPromoApp/music-promo-crm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: | 
            MusicPromoApp/music-promo-crm/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            MusicPromoApp/music-promo-crm/src-tauri

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-1 \
            librsvg2-dev \
            patchelf \
            libwebkit2gtk-4.1-0 || true
          sudo apt-get install -y libwebkit2gtk-4.0-37 || true

      - name: Install dependencies
        run: npm ci

      # macOS build (DMG + notarization if secrets are provided)
      - name: Build macOS (DMG)
        if: matrix.os == 'macos-latest'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: npm run tauri:build:mac

      # Windows build (MSI). Sign with TAURI_PRIVATE_KEY or sign post-build via CI.
      - name: Build Windows (MSI)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: npm run tauri:build:win

      # Linux build (AppImage, deb, rpm)
      - name: Build Linux (AppImage/deb/rpm)
        if: matrix.os == 'ubuntu-latest'
        run: npm run tauri:build:linux

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-macos
          path: |
            MusicPromoApp/music-promo-crm/src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-windows
          path: |
            MusicPromoApp/music-promo-crm/src-tauri/target/release/bundle/msi/*.msi

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: desktop-linux
          path: |
            MusicPromoApp/music-promo-crm/src-tauri/target/release/bundle/appimage/*.AppImage
            MusicPromoApp/music-promo-crm/src-tauri/target/release/bundle/deb/*.deb
            MusicPromoApp/music-promo-crm/src-tauri/target/release/bundle/rpm/*.rpm

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: |
          ls -R artifacts || true

      - name: Create GitHub Release (draft)
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag }}
          target_commitish: ${{ github.sha }}
          body_path: MusicPromoApp/music-promo-crm/docs/RELEASE_NOTES.md
          files: |
            artifacts/**
