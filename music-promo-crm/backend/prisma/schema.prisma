// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(uuid())
  name                String
  email               String                @unique
  password            String
  role                UserRole              @default(USER)
  isActive            Boolean               @default(true)
  emailVerified       Boolean               @default(false)
  lastLoginAt         DateTime?
  twoFactorSecret     String?               @db.Text
  twoFactorEnabled    Boolean               @default(false)
  requires2FA         Boolean               @default(false)
  failedLoginAttempts Int                   @default(0)
  accountLockedUntil  DateTime?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  
  // Relations
  twoFactorBackupCodes TwoFactorBackupCode[]
  auditLogs           AuditLog[]
  
  @@index([email])
  @@map("users")
}

model TwoFactorBackupCode {
  id        String   @id @default(uuid())
  code      String
  used      Boolean  @default(false)
  usedAt    DateTime?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([code])
  @@map("two_factor_backup_codes")
}

model AuditLog {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  action      String
  entityType  String?
  entityId    String?
  metadata    Json?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime  @default(now())
  
  @@index([userId])
  @@index([action])
  @@index([entityType, entityId])
  @@index([createdAt])
  @@map("audit_logs")
}

model LoginAttempt {
  id          String   @id @default(uuid())
  email       String
  ipAddress   String
  userAgent   String?
  success     Boolean
  createdAt   DateTime @default(now())
  
  @@index([email])
  @@index([ipAddress])
  @@index([createdAt])
  @@map("login_attempts")
}

model SecuritySetting {
  id                      String   @id @default(uuid())
  maxLoginAttempts        Int      @default(5)
  accountLockoutDuration  Int      @default(15) // in minutes
  passwordMinLength       Int      @default(8)
  passwordRequireUppercase Boolean  @default(true)
  passwordRequireLowercase Boolean  @default(true)
  passwordRequireNumbers  Boolean  @default(true)
  passwordRequireSpecial  Boolean  @default(true)
  sessionTimeout          Int      @default(1440) // in minutes
  require2FA             Boolean  @default(false)
  updatedAt              DateTime @updatedAt
  
  @@map("security_settings")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  MANAGER
  USER
  GUEST
}

// Add indexes for performance
model _prisma_migrations {
  id                  String   @id @db.Uuid
  checksum            String
  finished_at         DateTime?  @db.Timestamptz(6)
  migration_name      String?
  logs                String?
  rolled_back_at      DateTime?  @db.Timestamptz(6)
  started_at          DateTime   @default(now()) @db.Timestamptz(6)
  applied_steps_count Int        @default(0)
}
